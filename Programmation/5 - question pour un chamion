# Questions pour un chamion (90 points)
# -
#
# Page du challenge : https://cyber-learning.fr/cyber-challenge/programmation/calcul50/sujet.php?jeton=JETON
#
# Proposition de code par br0nson
# LinkedIn : t.ly/fra3R


import requests  # Pour faire des requêtes HTTP
from bs4 import BeautifulSoup  # Pour parser le HTML
import re  # Pour les expressions régulières
import sys  # Pour gérer les interruptions du script
from colorama import Fore, Style, init  # Pour la coloration du texte dans la console

# Initialisation de colorama
init(autoreset=True)

# URL de la page à scraper ATTENTION JETON A CHANGER EN FONCTION DE LA SESSION (le jeton fait 12 caractères)
url = 'https://cyber-learning.fr/cyber-challenge/programmation/calcul50/sujet.php?jeton=JETON'

# Vérification du jeton
if 'jeton=JETON' in url:
    print(f"{Fore.RED}{Style.BRIGHT}Pense à remplacer ton jeton mon grand ;){Style.RESET_ALL}")
    sys.exit(1)

# Créer une session pour conserver les cookies et autres informations de session
session = requests.Session()

# Fonction pour extraire les nombres et calculer le résultat
def extract_and_calculate(soup):
    question = None
    for line in soup.stripped_strings:
        if any(prefix in line for prefix in ["Pouvez vous me dire ce que donne ce calcul : ",
                                             "Alors combien font ",
                                             "Ca fait combien "]):
            # Utilisation d'une expression régulière pour extraire les nombres
            match = re.search(r'(\d+)\s*x\s*(\d+)', line)
            if match:
                question = match.group(0)
                x_str, y_str = match.groups()
                x, y = int(x_str), int(y_str)
                break

    if question is None:
        raise ValueError("La question mathématique n'a pas été trouvée.")

    # Calculer la réponse attendue
    expected_result = x * y
    return expected_result

def main():
    print(f"{Fore.CYAN}{Style.BRIGHT}")
    print("===================================")
    print("  Questions pour un chamion")
    print("  Programmation - 90 points")
    print("")
    print("  Présenté par br0nson")
    print("  LinkedIn : t.ly/fra3R ")
    print("===================================")
    print("")

    print(f"{Fore.GREEN}Démarrage du script de scraping...{Style.RESET_ALL}")
    while True:
        try:
            # Récupérer le contenu de la page
            response = session.get(url)
            response.raise_for_status()  # Vérifie si la requête a réussi
            soup = BeautifulSoup(response.text, 'html.parser')

            # Extraire les nombres et calculer le résultat
            expected_result = extract_and_calculate(soup)
            # print(f"{Fore.BLUE}Équation trouvée et résultat calculé : {expected_result}{Style.RESET_ALL}")

            # Préparer les données pour le formulaire
            form_data = {
                'resultat': str(expected_result)
            }

            # Soumettre le formulaire
            response = session.post(url, data=form_data)
            response.raise_for_status()  # Vérifie si la requête a réussi

            # Vérifier si le défi est réussi
            soup = BeautifulSoup(response.text, 'html.parser')
            text = soup.get_text()

            if "BRAVO" in text:
                print(f"{Fore.GREEN}Formulaire soumis avec succès.{Style.RESET_ALL}")
                print(f"{Fore.CYAN}Code obtenu : {text.strip()}")
                break
            # else:
                # print(f"{Fore.RED}Échec de l'affichage du code obtenu.{Style.RESET_ALL}")

        except requests.RequestException as e:
            print(f"{Fore.RED}Erreur lors de la requête HTTP : {e}{Style.RESET_ALL}")

        except ValueError as e:
            print(f"{Fore.RED}Erreur lors du traitement des données : {e}{Style.RESET_ALL}")

        except Exception as e:
            print(f"{Fore.RED}Erreur inattendue : {e}{Style.RESET_ALL}")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print(f"\n{Fore.YELLOW}Script interrompu par l'utilisateur.{Style.RESET_ALL}")
        sys.exit(0)
